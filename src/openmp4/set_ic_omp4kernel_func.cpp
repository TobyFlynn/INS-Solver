//
// auto-generated by op2.py
//

void set_ic_omp4_kernel(
  double *data0,
  int dat0size,
  double *data1,
  int dat1size,
  double *data2,
  int dat2size,
  int count,
  int num_teams,
  int nthread){

  #pragma omp target teams num_teams(num_teams) thread_limit(nthread) map(to:data0[0:dat0size],data1[0:dat1size],data2[0:dat2size]) \
    map(to: bc_p_ompkernel, bc_u_ompkernel, bc_v_ompkernel)
  #pragma omp distribute parallel for schedule(static,1)
  for ( int n_op=0; n_op<count; n_op++ ){
    //variable mapping
    double *q0 = &data0[15*n_op];
    double *q1 = &data1[15*n_op];
    double *q2 = &data2[15*n_op];

    //inline function
    
    for(int i = 0; i < 15; i++) {
      q0[i] = bc_u_ompkernel;
      q1[i] = bc_v_ompkernel;
      q2[i] = bc_p_ompkernel;
    }
    //end inline func
  }

}
