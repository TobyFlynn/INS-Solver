set(COMMON_SRC ins_op.cpp solvers_op/advection_solver_op.cpp)

if(BUILD_SN AND BUILD_CPU)
  add_executable(ins_openmp ${COMMON_SRC} openmp/ins_kernels.cpp)
  target_link_libraries(ins_openmp -L${OP2_DIR}/lib -lop2_openmp -lop2_hdf5 ${HDF5_LIB} ${PETSC_LIB} ${ARMA_LIB} ${OPENBLAS_LIB} -L${OP2DGTOOLKIT_DIR}/lib -lop2dgtoolkit_2d_openmp -ldgtoolkit ${EXTRA_LIBS})
  target_compile_definitions(ins_openmp PRIVATE DG_DIM=2 DG_ORDER=${ORDER} OP2_PARTITIONER=${PART_LIB_NAME})
endif()

if(BUILD_SN AND BUILD_GPU)
  add_executable(ins_cuda ${COMMON_SRC} cuda/ins_kernels.cu)
  target_link_libraries(ins_cuda -L${OP2_DIR}/lib -lop2_cuda -lop2_hdf5 ${HDF5_LIB} ${PETSC_LIB} ${ARMA_LIB} ${OPENBLAS_LIB} CUDA::cudart_static CUDA::cublas -L${OP2DGTOOLKIT_DIR}/lib -lop2dgtoolkit_2d_cuda -ldgtoolkit ${EXTRA_LIBS})
  target_compile_definitions(ins_cuda PRIVATE BUILD_CUDA OP2_DG_CUDA INS_CUDA DG_DIM=2 DG_ORDER=${ORDER} OP2_PARTITIONER=${PART_LIB_NAME})
endif()

if(BUILD_MPI AND BUILD_CPU)
  add_executable(ins_mpi_openmp ${COMMON_SRC} openmp/ins_kernels.cpp)
  target_include_directories(ins_mpi_openmp PRIVATE ${MPI_CXX_INCLUDE_PATH})
  target_link_libraries(ins_mpi_openmp -L${OP2_DIR}/lib -lop2_mpi -lop2_openmp -lop2_hdf5 ${HDF5_LIB} ${PETSC_LIB} ${ARMA_LIB} ${OPENBLAS_LIB} -L${OP2DGTOOLKIT_DIR}/lib -lop2dgtoolkit_2d_mpi_openmp -ldgtoolkit ${PART_LIB} ${EXTRA_LIBS} ${MPI_CXX_LIBRARIES})
  target_compile_definitions(ins_mpi_openmp PRIVATE INS_MPI DG_DIM=2 DG_ORDER=${ORDER} OP2_PARTITIONER=${PART_LIB_NAME})
endif()

if(BUILD_MPI AND BUILD_GPU)
  add_executable(ins_mpi_cuda ${COMMON_SRC} cuda/ins_kernels.cu)
  target_include_directories(ins_mpi_cuda PRIVATE ${MPI_CXX_INCLUDE_PATH})
  target_link_libraries(ins_mpi_cuda -L${OP2_DIR}/lib -lop2_mpi_cuda -lop2_hdf5 ${HDF5_LIB} ${PETSC_LIB} ${ARMA_LIB} CUDA::cudart_static CUDA::cublas -L${OP2DGTOOLKIT_DIR}/lib -lop2dgtoolkit_2d_mpi_cuda -ldgtoolkit ${PART_LIB} ${EXTRA_LIBS} ${MPI_CXX_LIBRARIES})
  target_compile_definitions(ins_mpi_cuda PRIVATE BUILD_CUDA OP2_DG_CUDA INS_CUDA INS_MPI DG_DIM=2 DG_ORDER=${ORDER} OP2_PARTITIONER=${PART_LIB_NAME})
endif()
