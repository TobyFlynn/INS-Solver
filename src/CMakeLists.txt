set(COMMON_SRC ins_op.cpp solvers_op/advection_solver_op.cpp)
list(APPEND COMMON_SRC solvers_op/ls_solver_op.cpp timing.cpp)
list(APPEND COMMON_SRC solvers/ls_utils/ls_reinit_poly.cpp)
list(APPEND COMMON_SRC matrices_op/poisson/poisson_mat_op.cpp)
list(APPEND COMMON_SRC solvers_op/mp_ins_solver_op.cpp)
list(APPEND COMMON_SRC solvers_op/ins_solver_op.cpp)
list(APPEND COMMON_SRC matrices_op/poisson/factor_poisson_mat_op.cpp)
list(APPEND COMMON_SRC matrices_op/poisson/mm_poisson_mat_op.cpp)
list(APPEND COMMON_SRC matrices_op/poisson/factor_mm_poisson_mat_op.cpp)
list(APPEND COMMON_SRC linear_solvers/petsc_amg/petsc_amg.cpp)
list(APPEND COMMON_SRC linear_solvers/linear_solver.cpp)
list(APPEND COMMON_SRC linear_solvers_op/petsc_block_jacobi/petsc_block_jacobi_op.cpp)
list(APPEND COMMON_SRC linear_solvers_op/pmultigrid/pmultigrid_op.cpp)
list(APPEND COMMON_SRC linear_solvers/petsc_pmultigrid/petsc_pmultigrid.cpp)

set(CPU_SRC utils.cpp solvers/ls_utils/ls_reinit.cpp matrices/poisson/poisson_mat_cpu.cpp)
list(APPEND CPU_SRC linear_solvers/petsc_utils/utils.cpp)
list(APPEND CPU_SRC linear_solvers/petsc_block_jacobi/petsc_block_jacobi_cpu.cpp)
list(APPEND CPU_SRC linear_solvers/petsc_pmultigrid/petsc_pmultigrid_cpu.cpp)
set(GPU_SRC utils.cu solvers/ls_utils/ls_reinit_poly_eval_cuda.cu solvers/ls_utils/ls_reinit.cu matrices/poisson/poisson_mat_gpu.cu)
list(APPEND GPU_SRC linear_solvers/petsc_utils/utils.cu)
list(APPEND GPU_SRC linear_solvers/petsc_block_jacobi/petsc_block_jacobi_gpu.cu)
list(APPEND GPU_SRC linear_solvers/petsc_pmultigrid/petsc_pmultigrid_gpu.cu)
set(SN_SRC solvers/ls_utils/kd_tree.cpp)
set(MPI_SRC solvers/ls_utils/kd_tree_mpi.cpp mpi_helper_func.cpp)
set(SN_CPU_SRC "")
set(SN_GPU_SRC "")
set(MPI_CPU_SRC "")
set(MPI_GPU_SRC "")

if(BUILD_SN AND BUILD_CPU)
  add_executable(ins_openmp ${COMMON_SRC} ${CPU_SRC} ${SN_SRC} ${SN_CPU_SRC} openmp/ins_kernels.cpp)
  target_link_libraries(ins_openmp -L${OP2_DIR}/lib -lop2_openmp -lop2_hdf5 ${HDF5_LIB} ${PETSC_LIB} ${ARMA_LIB} ${OPENBLAS_LIB} -L${OP2DGTOOLKIT_DIR}/lib -lop2dgtoolkit_2d_openmp -ldgtoolkit ${EXTRA_LIBS})
  target_compile_definitions(ins_openmp PRIVATE DG_DIM=2 DG_ORDER=${ORDER} OP2_PARTITIONER=${PART_LIB_NAME})
endif()

if(BUILD_SN AND BUILD_GPU)
  add_executable(ins_cuda ${COMMON_SRC} ${GPU_SRC} ${SN_SRC} ${SN_GPU_SRC} cuda/ins_kernels.cu)
  target_link_libraries(ins_cuda -L${OP2_DIR}/lib -lop2_cuda -lop2_hdf5 ${HDF5_LIB} ${PETSC_LIB} ${ARMA_LIB} ${OPENBLAS_LIB} CUDA::cudart_static CUDA::cublas -L${OP2DGTOOLKIT_DIR}/lib -lop2dgtoolkit_2d_cuda -ldgtoolkit ${EXTRA_LIBS})
  target_compile_definitions(ins_cuda PRIVATE BUILD_CUDA OP2_DG_CUDA INS_CUDA DG_DIM=2 DG_ORDER=${ORDER} OP2_PARTITIONER=${PART_LIB_NAME})
endif()

if(BUILD_MPI AND BUILD_CPU)
  add_executable(ins_mpi_openmp ${COMMON_SRC} ${CPU_SRC} ${MPI_SRC} ${MPI_CPU_SRC} openmp/ins_kernels.cpp)
  target_include_directories(ins_mpi_openmp PRIVATE ${MPI_CXX_INCLUDE_PATH})
  target_link_libraries(ins_mpi_openmp -L${OP2_DIR}/lib -lop2_mpi -lop2_openmp -lop2_hdf5 ${HDF5_LIB} ${ARMA_LIB} ${OPENBLAS_LIB} -L${OP2DGTOOLKIT_DIR}/lib -lop2dgtoolkit_2d_mpi_openmp -ldgtoolkit ${PART_LIB} ${EXTRA_LIBS} ${PETSC_LIB} ${MPI_CXX_LIBRARIES})
  target_compile_definitions(ins_mpi_openmp PRIVATE INS_MPI DG_DIM=2 DG_ORDER=${ORDER} OP2_PARTITIONER=${PART_LIB_NAME})
endif()

if(BUILD_MPI AND BUILD_GPU)
  add_executable(ins_mpi_cuda ${COMMON_SRC} ${GPU_SRC} ${MPI_SRC} ${MPI_GPU_SRC} cuda/ins_kernels.cu)
  target_include_directories(ins_mpi_cuda PRIVATE ${MPI_CXX_INCLUDE_PATH})
  target_link_libraries(ins_mpi_cuda -L${OP2_DIR}/lib -lop2_mpi_cuda -lop2_hdf5 ${HDF5_LIB} ${ARMA_LIB} CUDA::cudart_static CUDA::cublas -L${OP2DGTOOLKIT_DIR}/lib -lop2dgtoolkit_2d_mpi_cuda -ldgtoolkit ${PART_LIB} ${EXTRA_LIBS} ${PETSC_LIB} ${MPI_CXX_LIBRARIES})
  target_compile_definitions(ins_mpi_cuda PRIVATE BUILD_CUDA OP2_DG_CUDA INS_CUDA INS_MPI DG_DIM=2 DG_ORDER=${ORDER} OP2_PARTITIONER=${PART_LIB_NAME})
endif()
